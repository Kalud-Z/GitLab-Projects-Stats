

@mixin respond($breakpoint) {

  @if $breakpoint == phone-small {
    @media (max-width:22.5em) { @content };  //360px  //* content : allows us to pass a block of code into the mixin
  }

  @if $breakpoint == phone {
    @media (max-width:37.5em) { @content };  //600px  //* content : allows us to pass a block of code into the mixin
  }

  @if $breakpoint == tab-port {
    @media (max-width:56.25em) { @content };  // 900 px
  }

  @if $breakpoint == tab-land {
    @media (max-width:75em) { @content };  // 1200 px
  }

  @if $breakpoint == big-desktop-1 {
    @media (min-width:112.5em) { @content };    // 1800 px
  }

  @if $breakpoint == big-desktop-2 {
    @media (min-width:131.250em) { @content };    // 2100 px
  }

  @if $breakpoint == big-desktop-3 {
    @media (min-width:150em) { @content };    // 2400 px
  }

  @if $breakpoint == big-desktop-4 {
    @media (min-width:168.750em) { @content };    // 2700 px
  }

  @if $breakpoint == big-desktop-5 {
    @media (min-width:187.500em) { @content };    // 3000 px
  }

}




@mixin flexCenter  {
  display: flex;
  align-items: center;     // centers elements along the cross axis
  justify-content: center; // centers elements along the main axis
}


//  css grid stuff


@mixin displayGrid-1row-1column-center-items {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-row: 1fr;
  justify-items: center;
  align-items: center;
}


@mixin gridCenterItems {
  display: grid;
  justify-items: center;
  align-items: center;
}

@mixin gridCenterTracks {
  display: grid;
  justify-content: center;
  align-content: center;
}

@mixin gridSelfCenter {
  align-self: center;
  justify-self: center;
}

// other

@mixin centerAbsolutePositioning {
  position : absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50% , -50%);
}



@mixin centerAbsolutePositioning-rightBased {
  position : absolute;
  top: 50%;
  right: 50%;
  transform: translate(-50% , -50%);
}




